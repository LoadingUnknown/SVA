{
	"info": {
		"_postman_id": "6b1cf348-b043-4c5d-9d14-308cfda03ece",
		"name": "Working with your Team - Petstore collection",
		"description": "## About this collection\n\nThis is a sample collection generated from the [Petstore API](https://www.postman.com/postman/workspace/postman-intergalactic/api/bbbac980-9549-41e3-b4e1-6939b2315f1f). Feel free to fork this collection, leave comments, etc.\n\n## Get Involved!\n\n1. **Fork the collection** - Click the **Run in Postman** button to fork the collection to your own workspace.\n2. **Watch the collection** - Receive a notification when the collection is modified.\n3. **Leave a comment** - Make the Postman experience massively multi-player and help us make this a global team effort.\n4. **Find your friends** - See who else is present in the public workspace in real-time.\n    \n\n## Working with Your Team in Postman\n\n##### Previous session aired **February 16, 2022**\n\n**View the slides** [**here**](https://www.slideshare.net/GetPostman/working-with-your-team)**.**\n\n## **What you'll learn**\n\nThis session covers the following topics:  \n✅ Use version control to collaborate with your team  \n✅ Sync a Git repository as a single source of truth  \n✅ Collaborate with external teams via Postman’s built-in integrations  \n✅ Share your API elements in workspaces, collections, and environments  \n✅ Gain visibility into your team activity via the activity feed and changelog  \n✅ Manage roles and permissions  \n✅ Leverage in-app comment\n\n## Join the Postman Intergalactic Series!\n\nPostman Intergalactic is a series of educational sessions. Each lesson is taught by your favorite Postmanauts. [Sign up to be notified about upcoming sessions](https://www.postman.com/events/intergalactic/).\n\n## Additional Resources\n\nFeeling stuck or want to dig deeper into specific topics? We've got you covered:\n\n\\* [Working with your team documentation](learning.postman.com/docs/collaborating-in-postman/collaboration-intro/) - The Postman Learning Center homepage for all things team-related.  \n\\* [Community Forum](https://community.postman.com) - Our community forum is incredibly active with users and Postmanauts alike chipping in to help answer user questions.  \n\\* [Postman Answers](https://postman.com/postman/workspace/postman-answers/) - A public workspace full of forkable collections answering some of the most common Postman questions.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39971930"
	},
	"item": [
		{
			"name": "pets",
			"item": [
				{
					"name": "List all pets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pets?limit=53723495",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets"
							],
							"query": [
								{
									"key": "limit",
									"value": "53723495",
									"description": "How many items to return at one time (max 100)"
								}
							]
						}
					},
					"response": [
						{
							"name": "A paged array of pets",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets?limit=53723495",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									],
									"query": [
										{
											"key": "limit",
											"value": "53723495"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-next",
									"value": "tempor ut dolore Duis",
									"description": "A link to the next page of responses"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": -9797782,\n    \"name\": \"dolore sint\",\n    \"tag\": \"aliquip pariatur ut\"\n  },\n  {\n    \"id\": 10741823,\n    \"name\": \"cillum mollit velit eiusmod\",\n    \"tag\": \"ut nu\"\n  }\n]"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets?limit=53723495",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									],
									"query": [
										{
											"key": "limit",
											"value": "53723495"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": 66671631,\n  \"message\": \"est esse consectetur ipsum laborum\"\n}"
						}
					]
				},
				{
					"name": "Create a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets"
							]
						}
					},
					"response": [
						{
							"name": "Null response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": 66671631,\n  \"message\": \"est esse consectetur ipsum laborum\"\n}"
						}
					]
				},
				{
					"name": "Info for a specific pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body contains animal name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pets/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "tempor ut dolore Duis",
									"description": "(Required) The id of the pet to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Expected response to a valid request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId",
											"value": "tempor ut dolore Duis",
											"description": "(Required) The id of the pet to retrieve"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 46729705,\n  \"name\": \"consectetur dolor\",\n  \"tag\": \"Lorem\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId",
											"value": "tempor ut dolore Duis",
											"description": "(Required) The id of the pet to retrieve"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": 66671631,\n  \"message\": \"est esse consectetur ipsum laborum\"\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://petstore.swagger.io/v1",
			"type": "string"
		}
	]
}